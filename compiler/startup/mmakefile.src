#   $Id: mmakefile.src 55239 2018-06-05 18:50:10Z NicJA $
#
#   Generate the startup code.
#

include $(SRCDIR)/config/aros.cfg

#MM- core-linklibs : linklibs-startup linklibs-startup-$(AROS_TARGET_CPU)
#MM- linklibs: linklibs-startup
#MM linklibs-startup : linklibs-startup-setup includes includes-copy \
#MM     compiler-stdc-includes compiler-posixc-includes kernel-task-includes

NIXFILES := \
	nixmain

FILES := \
	startup \
	detach  \
	elf-startup
ifneq (,$(findstring arm,$(AROS_TARGET_CPU)))
FILES += arm-exidx-unwind
endif

CXXFILES := \
        static-cxx-ops \
        static-cxx-personality \
        static-cxx-cxa-pure-virtual \

NIXOBJS  := $(addprefix $(GENDIR)/$(CURDIR)/nix/,$(addsuffix .o,$(NIXFILES)))
CXXOBJS  := $(addprefix $(GENDIR)/$(CURDIR)/cxx/,$(addsuffix .o,$(CXXFILES)))
OBJS  := $(addprefix $(AROS_LIB)/,$(addsuffix .o,$(FILES) $(NIXFILES) $(CXXFILES)))

NIXDEPS  := $(addprefix $(GENDIR)/$(CURDIR)/nix/,$(addsuffix .d,$(NIXFILES)))
CXXDEPS  := $(addprefix $(GENDIR)/$(CURDIR)/cxx/,$(addsuffix .d,$(CXXFILES)))
DEPS  := $(addprefix $(GENDIR)/$(CURDIR)/,$(addsuffix .d,$(FILES)))

linklibs-startup: $(NIXOBJS) $(CXXOBJS) $(OBJS)

#MM
linklibs-startup-quick: $(NIXOBJS) $(CXXOBJS) $(OBJS)

# standard startup object rules ...

$(AROS_LIB)/%.o : $(GENDIR)/$(CURDIR)/%.o
	@$(CP) $< $@

%rule_compile basename=% targetdir=$(GENDIR)/$(CURDIR)

# Posix/*nix startup object rules ...

$(AROS_LIB)/%.o : $(GENDIR)/$(CURDIR)/nix/%.o
	@$(CP) $< $@

USER_CPPFLAGS += -D_XOPEN_SOURCE=700

%rule_compile basename=% targetdir=$(GENDIR)/$(CURDIR)/nix

# CXX support ...

$(AROS_LIB)/%.o : $(GENDIR)/$(CURDIR)/cxx/%.o
	@$(CP) $< $@

%rule_compile_cxx basename=% targetdir=$(GENDIR)/$(CURDIR)/cxx

# Generic rules ...

#MM linklibs-startup-setup
%rule_makedirs dirs="$(GENDIR)/$(CURDIR) $(AROS_LIB)" setuptarget=linklibs-startup-setup

%copy_includes includes=startup.h path=aros

.PHONY: linklibs-startup linklibs-startup-setup

%include_deps depstargets="linklibs-startup" deps="$(DEPS) $(CXXDEPS) $(NIXDEPS)"

%common
