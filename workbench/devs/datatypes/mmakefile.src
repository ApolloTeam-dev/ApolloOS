# Copyright (C) 2003-2020, The AROS Development Team. All rights reserved.

include $(SRCDIR)/config/aros.cfg

DTDIR 		:= $(AROS_DEVS)/DataTypes
DTSTORAGEDIR 	:= $(AROS_STORAGE)/DataTypes

BASEAUDIODESCRIPTORS  := 8SVX AIFF
BASEPICDESCRIPTORS    := ILBM PNG BMP GIF JPEG
BASEANIMDESCRIPTORS   := ANIM
BASEMOVIEDESCRIPTORS   := CDXL
BASEBINARYDESCRIPTORS := ELF A68K
BASEMISCDESCRIPTORS   := FTXT AmigaGuide

AUDIODESCRIPTORS  := AMR M3U MID MP3  OGG RM WAVE MP1 WMA
PICDESCRIPTORS    := HEIC PCX Targa Lunapaint GEMImage Degas WebP
ANIMDESCRIPTORS   := MPEGVideo
MOVIEDESCRIPTORS   := AVI MOV WMV VOB MP4 FLV WebM
BINARYDESCRIPTORS := ELF_EXE ELF64_EXE ELF64_EXE_BE ELF_EXE_BE ELF_EXE_Linux
MISCDESCRIPTORS   := HTML AmigaGuideNode AmigaGuideMOS \
		     ADF AudioMode Catalog Country DataType Font MP3ID3 \
		     Otag SFS Trashcan TrueType PREF Lua AmiLua PDF PostScript \
		     Archive Python REXX FAT ASF PLS \
		     DT64 WinURL PNMP1 PNMP2 PNMP3 PNMP4 PNMP5 PNMP6 MSD MSI FLAC \
                     XM  CAT LIST  PFS KickROM KickDisk SVG LHA ZIP

FILES             := $(BASEAUDIODESCRIPTORS) \
                     $(BASEPICDESCRIPTORS) \
                     $(BASEANIMDESCRIPTORS) \
                     $(BASEMOVIEDESCRIPTORS) \
                     $(BASEBINARYDESCRIPTORS) \
                     $(BASEMISCDESCRIPTORS)

ifneq ($(AROS_PREFS_SET),classic)
FILES += $(AUDIODESCRIPTORS) \
                     $(PICDESCRIPTORS) \
                     $(ANIMDESCRIPTORS) \
                     $(MOVIEDESCRIPTORS) \
                     $(BINARYDESCRIPTORS) \
                     $(MISCDESCRIPTORS)
else
STORAGEFILES = $(AUDIODESCRIPTORS) \
                     $(PICDESCRIPTORS) \
                     $(ANIMDESCRIPTORS) \
                     $(MOVIEDESCRIPTORS) \
                     $(BINARYDESCRIPTORS) \
                     $(MISCDESCRIPTORS)
endif

DTFILES		:= $(foreach f, $(FILES), $(DTDIR)/$(f))
DTSTORAGEFILES	:= $(foreach f, $(STORAGEFILES), $(DTSTORAGEDIR)/$(f))

#MM- workbench-devs-complete : workbench-devs-datatypes
#MM workbench-devs-datatypes : workbench-devs-datatypes-setup

#MM
workbench-devs-datatypes : $(DTFILES) $(DTSTORAGEFILES)

#MM
workbench-devs-datatypes-quick : workbench-devs-datatypes

#MM workbench-devs-datatypes-setup :
%rule_makedirs dirs="$(DTDIR) $(DTSTORAGEDIR)" setuptarget=workbench-devs-datatypes-setup

$(DTDIR)/% : $(SRCDIR)/$(CURDIR)/%.dtd $(CREATEDTDESC)
	$(Q)$(ECHO) "Generating  $(if $(filter /%,$@),$(if $(filter $(SRCDIR)/%,$(abspath $@)),$(patsubst $(SRCDIR)/%,%,$(abspath $@)),$(patsubst $(TOP)/%,%,$(abspath $@))),$(patsubst $(SRCDIR)/%,%,$(abspath $(SRCDIR)/$(CURDIR)/$@)))"
	$(Q)cd $(DTDIR) && $(CREATEDTDESC) $<

$(DTSTORAGEDIR)/% : $(SRCDIR)/$(CURDIR)/%.dtd $(CREATEDTDESC)
	$(Q)$(ECHO) "Generating $(if $(filter /%,$@),$(if $(filter $(SRCDIR)/%,$(abspath $@)),$(patsubst $(SRCDIR)/%,%,$(abspath $@)),$(patsubst $(TOP)/%,%,$(abspath $@))),$(patsubst $(SRCDIR)/%,%,$(abspath $(SRCDIR)/$(CURDIR)/$@)))"
	$(Q)cd $(DTSTORAGEDIR) && $(CREATEDTDESC) $<

%common
